{"pageProps":{"post":{"layout":"post","title":"Project: Bool Checker","description":"Determine what any boolean expression evaluates to","date":"2018-07-22 21:56:00 +0200","slug":"project-bool-checker","content":"<p>Checkout my new small <a href=\"https://zlypher.github.io/bool/\">side project \"Bool Checker\"</a>{:target=\"_blank\" rel=\"noopener noreferer\"}.</p>\n<h2>What does it do?</h2>\n<p>\"Bool Checker\" basically takes a boolean expression like <code>a &#x26;&#x26; b</code> or <code>foo || (bar &#x26;&#x26; baz)</code> and determines, what these expressions would evaluate to if you pass <code>true/false</code> to the respective elements.</p>\n<h2>Why should I try it?</h2>\n<p>You might have some complex boolean expressions in your codebase and you don't want to waste a lot of time to figure out what they would evaluate to? Then this tool is for you!</p>\n<p>Apart from that I took some time to create it and it would be awesome to hear what you think about it!</p>\n<h2>Why did I create it?</h2>\n<p>I was following the chapters from <a href=\"http://www.craftinginterpreters.com/\">Craftin Interpreters by Bob Nystrom</a>{:target=\"_blank\" rel=\"noopener noreferer\"} for quite some time. So I was looking for a chance to implement this knowledge in a small app and boolean expressions seemed to be a reasonable choice for an interpreter.</p>\n<p>Further Links:</p>\n<ul>\n<li><a href=\"https://zlypher.github.io/bool/\">Bool GitHub Repository</a>{:target=\"_blank\" rel=\"noopener noreferer\"}</li>\n<li><a href=\"http://www.craftinginterpreters.com/contents.html\">Crafting Interpreters TOC</a>{:target=\"_blank\" rel=\"noopener noreferer\"}</li>\n</ul>\n","url":"https://zlypher.github.io/posts/project-bool-checker"}},"__N_SSG":true}